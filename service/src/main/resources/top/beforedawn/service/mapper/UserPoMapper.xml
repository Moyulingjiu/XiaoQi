<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.beforedawn.service.mapper.UserPoMapper">
  <resultMap id="BaseResultMap" type="top.beforedawn.service.model.po.UserPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="qq" jdbcType="BIGINT" property="qq" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="last_change_password" jdbcType="TIMESTAMP" property="lastChangePassword" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="use_nickname" jdbcType="INTEGER" property="useNickname" />
    <result column="right" jdbcType="TINYINT" property="right" />
    <result column="point" jdbcType="INTEGER" property="point" />
    <result column="luck" jdbcType="INTEGER" property="luck" />
    <result column="last_luck" jdbcType="TIMESTAMP" property="lastLuck" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
    <result column="modified_id" jdbcType="BIGINT" property="modifiedId" />
    <result column="create" jdbcType="TIMESTAMP" property="create" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `id`, `qq`, `password`, `last_change_password`, `nickname`, `use_nickname`, `right`, 
    `point`, `luck`, `last_luck`, `modified`, `modified_id`, `create`, `create_id`
  </sql>
  <select id="selectByExample" parameterType="top.beforedawn.service.model.po.UserPoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="top.beforedawn.service.model.po.UserPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (`qq`, `password`, `last_change_password`, 
      `nickname`, `use_nickname`, `right`, 
      `point`, `luck`, `last_luck`, 
      `modified`, `modified_id`, `create`, 
      `create_id`)
    values (#{qq,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, #{lastChangePassword,jdbcType=TIMESTAMP}, 
      #{nickname,jdbcType=VARCHAR}, #{useNickname,jdbcType=INTEGER}, #{right,jdbcType=TINYINT}, 
      #{point,jdbcType=INTEGER}, #{luck,jdbcType=INTEGER}, #{lastLuck,jdbcType=TIMESTAMP}, 
      #{modified,jdbcType=TIMESTAMP}, #{modifiedId,jdbcType=BIGINT}, #{create,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="top.beforedawn.service.model.po.UserPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qq != null">
        `qq`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="lastChangePassword != null">
        `last_change_password`,
      </if>
      <if test="nickname != null">
        `nickname`,
      </if>
      <if test="useNickname != null">
        `use_nickname`,
      </if>
      <if test="right != null">
        `right`,
      </if>
      <if test="point != null">
        `point`,
      </if>
      <if test="luck != null">
        `luck`,
      </if>
      <if test="lastLuck != null">
        `last_luck`,
      </if>
      <if test="modified != null">
        `modified`,
      </if>
      <if test="modifiedId != null">
        `modified_id`,
      </if>
      <if test="create != null">
        `create`,
      </if>
      <if test="createId != null">
        `create_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qq != null">
        #{qq,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastChangePassword != null">
        #{lastChangePassword,jdbcType=TIMESTAMP},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="useNickname != null">
        #{useNickname,jdbcType=INTEGER},
      </if>
      <if test="right != null">
        #{right,jdbcType=TINYINT},
      </if>
      <if test="point != null">
        #{point,jdbcType=INTEGER},
      </if>
      <if test="luck != null">
        #{luck,jdbcType=INTEGER},
      </if>
      <if test="lastLuck != null">
        #{lastLuck,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedId != null">
        #{modifiedId,jdbcType=BIGINT},
      </if>
      <if test="create != null">
        #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.qq != null">
        `qq` = #{record.qq,jdbcType=BIGINT},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.lastChangePassword != null">
        `last_change_password` = #{record.lastChangePassword,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nickname != null">
        `nickname` = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.useNickname != null">
        `use_nickname` = #{record.useNickname,jdbcType=INTEGER},
      </if>
      <if test="record.right != null">
        `right` = #{record.right,jdbcType=TINYINT},
      </if>
      <if test="record.point != null">
        `point` = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.luck != null">
        `luck` = #{record.luck,jdbcType=INTEGER},
      </if>
      <if test="record.lastLuck != null">
        `last_luck` = #{record.lastLuck,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null">
        `modified` = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedId != null">
        `modified_id` = #{record.modifiedId,jdbcType=BIGINT},
      </if>
      <if test="record.create != null">
        `create` = #{record.create,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null">
        `create_id` = #{record.createId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set `id` = #{record.id,jdbcType=BIGINT},
      `qq` = #{record.qq,jdbcType=BIGINT},
      `password` = #{record.password,jdbcType=VARCHAR},
      `last_change_password` = #{record.lastChangePassword,jdbcType=TIMESTAMP},
      `nickname` = #{record.nickname,jdbcType=VARCHAR},
      `use_nickname` = #{record.useNickname,jdbcType=INTEGER},
      `right` = #{record.right,jdbcType=TINYINT},
      `point` = #{record.point,jdbcType=INTEGER},
      `luck` = #{record.luck,jdbcType=INTEGER},
      `last_luck` = #{record.lastLuck,jdbcType=TIMESTAMP},
      `modified` = #{record.modified,jdbcType=TIMESTAMP},
      `modified_id` = #{record.modifiedId,jdbcType=BIGINT},
      `create` = #{record.create,jdbcType=TIMESTAMP},
      `create_id` = #{record.createId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.beforedawn.service.model.po.UserPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="qq != null">
        `qq` = #{qq,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastChangePassword != null">
        `last_change_password` = #{lastChangePassword,jdbcType=TIMESTAMP},
      </if>
      <if test="nickname != null">
        `nickname` = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="useNickname != null">
        `use_nickname` = #{useNickname,jdbcType=INTEGER},
      </if>
      <if test="right != null">
        `right` = #{right,jdbcType=TINYINT},
      </if>
      <if test="point != null">
        `point` = #{point,jdbcType=INTEGER},
      </if>
      <if test="luck != null">
        `luck` = #{luck,jdbcType=INTEGER},
      </if>
      <if test="lastLuck != null">
        `last_luck` = #{lastLuck,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        `modified` = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedId != null">
        `modified_id` = #{modifiedId,jdbcType=BIGINT},
      </if>
      <if test="create != null">
        `create` = #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        `create_id` = #{createId,jdbcType=BIGINT},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.beforedawn.service.model.po.UserPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set `qq` = #{qq,jdbcType=BIGINT},
      `password` = #{password,jdbcType=VARCHAR},
      `last_change_password` = #{lastChangePassword,jdbcType=TIMESTAMP},
      `nickname` = #{nickname,jdbcType=VARCHAR},
      `use_nickname` = #{useNickname,jdbcType=INTEGER},
      `right` = #{right,jdbcType=TINYINT},
      `point` = #{point,jdbcType=INTEGER},
      `luck` = #{luck,jdbcType=INTEGER},
      `last_luck` = #{lastLuck,jdbcType=TIMESTAMP},
      `modified` = #{modified,jdbcType=TIMESTAMP},
      `modified_id` = #{modifiedId,jdbcType=BIGINT},
      `create` = #{create,jdbcType=TIMESTAMP},
      `create_id` = #{createId,jdbcType=BIGINT}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>